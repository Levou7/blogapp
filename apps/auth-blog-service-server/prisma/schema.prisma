datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Role {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Permission {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id             String        @id @default(cuid())
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  firstName      String?
  lastName       String?
  username       String        @unique
  email          String?       @unique
  password       String
  roles          Json
  referredBy     String?
  referralCode   ReferralCode? @relation(fields: [referralCodeId], references: [id])
  referralCodeId String?
  transactions   Transaction[]
  wallets        Wallet[]
}

model ReferralCode {
  id             String    @id @default(cuid())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  code           String?
  expirationDate DateTime?
  users          User[]
}

model Item {
  id           String        @id @default(cuid())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  name         String?
  description  String?
  transactions Transaction[]
  price        Float?
}

model Transaction {
  id        String                    @id @default(cuid())
  createdAt DateTime                  @default(now())
  updatedAt DateTime                  @updatedAt
  amount    Float?
  typeField EnumTransactionTypeField?
  item      Item?                     @relation(fields: [itemId], references: [id])
  itemId    String?
  user      User?                     @relation(fields: [userId], references: [id])
  userId    String?
}

model Wallet {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  balance   Float?
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

enum EnumTransactionTypeField {
  Option1
}
